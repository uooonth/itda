import { CSSProperties, ReactNode } from 'react';
import { SelectUnits } from '../utility/calendar';
import { defaultHeaderFormats } from '../default-config';
import { IntervalRenderer, SidebarHeaderChildrenFnProps, TimelineTimeSteps } from '../types/main';
import { Dayjs } from 'dayjs';
export interface DateHeaderProps<Data> {
    style?: CSSProperties | undefined;
    className?: string | undefined;
    unit?: keyof TimelineTimeSteps | 'primaryHeader' | undefined;
    timelineUnit: SelectUnits;
    labelFormat?: string | FormatLabelFunction | undefined;
    intervalRenderer?: (props: IntervalRenderer<Data>) => ReactNode;
    headerData?: Data | undefined;
    children?: ((props: SidebarHeaderChildrenFnProps<Data>) => ReactNode) | undefined;
    height?: number | undefined;
}
export type DateHeaderWrapper<Data> = {
    unit?: keyof TimelineTimeSteps | 'primaryHeader';
    labelFormat?: FormatLabelFunction;
    style?: CSSProperties;
    className?: string;
    intervalRenderer?: (props: IntervalRenderer<Data>) => ReactNode;
    headerData?: Data;
    height?: number;
};
export declare function DateHeader<Data>({ labelFormat, unit, style, className, intervalRenderer, headerData, height, }: DateHeaderWrapper<Data>): import("react/jsx-runtime").JSX.Element;
type FormatLabelFunction = (timeRange: [Dayjs, Dayjs], unit: keyof typeof defaultHeaderFormats, labelWidth?: number, formatOptions?: typeof defaultHeaderFormats) => string;
export default DateHeader;
